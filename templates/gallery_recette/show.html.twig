{% extends 'base.html.twig' %}

{% block title %}Recette
{% endblock %}

{% block body %}
	<style>

		.rating {
			text-align: center;
			color: black;
		}
		.star {
			font-size: 1.5rem;
			cursor: pointer;
			transition: color 0.2s;
		}

		.star.active {
			color: gold;
		}
		#form_note {
			display: none;
		}
		#form_note {
			visibility: hidden;
		}
	</style>

	<!--View recette-->
	<div class="container my-8 mx-auto md:px-6">
		<section class="mb-8 text-center md:text-left">
			<div class="block rounded-lg bg-white shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700">
				<div class="flex flex-wrap items-center">
					<div class="block w-full shrink-0 grow-0 basis-auto md:w-5/12 lg:flex">
						<img src="{{ vich_uploader_asset(recette, 'imageFile') }}" alt="{{ recette.imageName }}" class="w-full rounded-t-lg md:rounded-tr-none md:rounded-bl-lg"/>

						<div class="w-full shrink-0 grow-0 basis-auto ">
							<div class="px-12 py-12">
								<h2 class="mb-6 text-4xl font-bold text-danger dark:text-danger-500">
									"{{ recette.titre }}"
								</h2>
								<p class="mb-6 pb-2 text-neutral-500 dark:text-neutral-300">
									{{ recette.description }}
								</p>
								<div class=" flex justify-between ">
									<button type="button" class="inline-block justify-between rounded-full bg-danger px-5 pb-2.5 pt-3 text-sm font-medium leading-normal text-white shadow-[0_4px_9px_-4px_#dc4c64] transition duration-150 ease-in-out hover:bg-danger-600 hover:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] focus:bg-danger-600 focus:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] focus:outline-none focus:ring-0 active:bg-danger-700 active:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(220,76,100,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)] dark:active:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)]" data-te-ripple-init data-te-ripple-color="light">
										<i class="fa-solid fa-stopwatch fa-lg"></i><br>
										<p>Cuisson</p>
										<p>{{ recette.tempsCuisson ? recette.tempsCuisson|date('H:i') : '' }}
											min</p>
									</button>
									<button type="button" class="inline-block rounded-full bg-danger px-4 pb-2.5 pt-3 text-sm font-medium leading-normal text-white shadow-[0_4px_9px_-4px_#dc4c64] transition duration-150 ease-in-out hover:bg-danger-600 hover:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] focus:bg-danger-600 focus:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] focus:outline-none focus:ring-0 active:bg-danger-700 active:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(220,76,100,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)] dark:active:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)]" data-te-ripple-init data-te-ripple-color="light">
										<i class="fa-solid fa-hourglass-half fa-lg"></i><br>
										<p>Pr√©paration</p>
										<p>{{ recette.tempsPrepation ? recette.tempsPrepation|date('H:i') : '' }}
											min</p>
									</button>
									<button type="button" class="inline-block rounded-full bg-danger px-5 pb-2.5 pt-3 text-sm font-medium leading-normal text-white shadow-[0_4px_9px_-4px_#dc4c64] transition duration-150 ease-in-out hover:bg-danger-600 hover:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] focus:bg-danger-600 focus:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] focus:outline-none focus:ring-0 active:bg-danger-700 active:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.3),0_4px_18px_0_rgba(220,76,100,0.2)] dark:shadow-[0_4px_9px_-4px_rgba(220,76,100,0.5)] dark:hover:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)] dark:focus:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)] dark:active:shadow-[0_8px_9px_-4px_rgba(220,76,100,0.2),0_4px_18px_0_rgba(220,76,100,0.1)]" data-te-ripple-init data-te-ripple-color="light">
										<i class="fa-solid fa-clock fa-lg"></i><br>
										<p>Repos</p>
										<p>{{ recette.tempsRepos ? recette.tempsRepos|date('H:i') : '' }}
											min</p>
									</button>
								</div>
								<div id="accordionFlushExample">
									<div class="rounded-none border border-l-0 border-r-0 border-t-0 border-neutral-200 bg-white dark:border-neutral-600 dark:bg-neutral-800">
										<h2 class="mb-0" id="flush-headingOne">
											<button class="group relative flex w-full items-center rounded-none border-0 bg-white px-5 py-4 text-left  transition [overflow-anchor:none] text-success hover:z-[2] focus:z-[3] focus:outline-none [&:not([data-te-collapse-collapsed])]:[box-shadow:inset_0_-1px_0_rgba(229,231,235)] " type="button" data-te-collapse-init data-te-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
												Ingredients
												<span class="-mr-1 ml-auto h-5 w-5 shrink-0 rotate-[-180deg] fill-[#336dec] transition-transform duration-200 ease-in-out group-[[data-te-collapse-collapsed]]:mr-0 group-[[data-te-collapse-collapsed]]:rotate-0 group-[[data-te-collapse-collapsed]]:fill-[#212529] motion-reduce:transition-none dark:fill-blue-300 dark:group-[[data-te-collapse-collapsed]]:fill-white">
													<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewbox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
														<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"/>
													</svg>
												</span>
											</button>
										</h2>
										<div id="flush-collapseOne" class="!visible border-0" data-te-collapse-item data-te-collapse-show aria-labelledby="flush-headingOne" data-te-parent="#accordionFlushExample">
											<div class="px-5 py-4">
												{{ recette.ingredients }}
											</div>
										</div>
									</div>
									<div class="rounded-none border border-l-0 border-r-0 border-t-0 border-neutral-200 bg-white dark:border-neutral-600 dark:bg-neutral-800">
										<h2 class="mb-0" id="flush-headingTwo">
											<button class="group relative flex w-full items-center rounded-none border-0 bg-white px-5 py-4 text-left  transition [overflow-anchor:none] text-success hover:z-[2] focus:z-[3] focus:outline-none [&:not([data-te-collapse-collapsed])]:[box-shadow:inset_0_-1px_0_rgba(229,231,235)] " type="button" data-te-collapse-init data-te-collapse-collapsed data-te-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
												Etapes
												<span class="-mr-1 ml-auto h-5 w-5 shrink-0 rotate-[-180deg] fill-[#336dec] transition-transform duration-200 ease-in-out group-[[data-te-collapse-collapsed]]:mr-0 group-[[data-te-collapse-collapsed]]:rotate-0 group-[[data-te-collapse-collapsed]]:fill-[#212529] motion-reduce:transition-none dark:fill-blue-300 dark:group-[[data-te-collapse-collapsed]]:fill-white">
													<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewbox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-6 w-6">
														<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"/>
													</svg>
												</span>
											</button>
										</h2>
										<div id="flush-collapseTwo" class="!visible hidden border-0" data-te-collapse-item aria-labelledby="flush-headingTwo" data-te-parent="#accordionFlushExample">
											<div class="px-5 py-4">
												{{ recette.etapes }}
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
	</div>
	<!--Soumettre les avis-->
	<div class="container my-4 mx-auto md:px-6">
		<div class=" p-5 block rounded-lg bg-white shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700">
			<div class="form-control">
				<form method="post">
					{{ form_start(form, { 'action': path('app_gallery_recette_show', { 'id': recette.id }) }) }}
					<div class="grid md:grid-cols-2 md:gap-6">
						<div class="relative mb-6" data-te-input-wrapper-init>
							{{ form_widget(form.commentaire) }}
							<label for="exampleInput123" class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[te-input-state-active]:-translate-y-[0.9rem] peer-data-[te-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary" placeholder="Donner votre avis">Ajouter un commentaire...
							</label>
						</div>
						<div class="relative ">

							{{ form_widget(form.note, {'id': 'form_note'}) }}
							<label for="exampleInput123" class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[te-input-state-active]:-translate-y-[0.9rem] peer-data-[te-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary" placeholder="Noter la recette">Noter la recette
							</label>

							<div class="rating ">
								<span class="star" data-rating="1">&#9734;</span>
								<span class="star" data-rating="2">&#9734;</span>
								<span class="star" data-rating="3">&#9734;</span>
								<span class="star" data-rating="4">&#9734;</span>
								<span class="star" data-rating="5">&#9734;</span>

							</div>
						</div>
					</div>
					{% if is_granted('ROLE_PATIENT') %}
						<button type="submit" data-mdb-ripple="true" data-mdb-ripple-color="light" class="inline-block px-6 py-2.5 mb-6 w-100 bg-red-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out" style="background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);">
							Envoyer
						</button>
					{% else %}
						<button type="button" onclick="checkUserRole(event)" class="submit-button inline-block px-6 py-2.5 mb-6 w-100 bg-red-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out" style="background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44573);">
							Envoyer
						</button>
					{% endif %}
					<div id="loginModal" class="fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50 hidden">
						<div class="bg-white p-6 rounded shadow-lg">
							<button class="absolute top-0 right-0 mt-2 mr-2 text-gray-600 hover:text-gray-800" onclick="closeLoginModal()">&times;</button>
							<p class="mb-4">Veuillez vous connecter pour donner votre avis.</p>
							<div class="flex justify-end">
								<button class="mr-2 bg-gray-200 hover:bg-gray-300 text-gray-700 font-medium py-2 px-4 rounded" onclick="closeLoginModal()">Ignorer</button>
								<button class="bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded" onclick="redirectToLogin()">Se connecter</button>
							</div>
						</div>
					</div>
					{{ form_end(form) }}
				</form>
			</div>
		</div>
	</div>
	<!--Other Recipe-->
	<div class="container mx-auto px-5 py-2 lg:px-32 lg:pt-12">
		<h2>Autres recettes</h2>
		<div>
			{% set counter = 0 %}
			<div class="flex flex-wrap md:m-2">
				{% for recipe in otherRecipes %}
					{% if recipe.id != recette.id %}
						{% if counter < 6 %}
							<div class="flex w-1/6 flex-wrap">
								<a class="mb-6 rounded-lg bg-white shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] dark:bg-neutral-700" href="{{ path('app_gallery_recette_show', { 'id': recipe.id }) }}">
									<div class="p-1 md:p-2">
										<img class="block rounded-lg object-cover object-center" src="{{ vich_uploader_asset(recipe, 'imageFile') }}" alt="{{ recipe.imageName }}" style="width: 200px; height: 200px; object-fit: cover; object-position: center;"/>
										{% set  counter = counter + 1 %}
									</div>
								</a>
							</div>
						{% endif %}
					{% endif %}
				{% endfor %}
			</div>
		</div>
	</div>

<script>

//script of modal//
window.addEventListener('DOMContentLoaded', function () {
document.getElementById('loginModal').classList.add('hidden');
});

function checkUserRole(event) {
event.preventDefault(); // Emp√™cher le comportement par d√©faut du bouton submit

if ("{{ is_granted('ROLE_PATIENT') }}") { // L'utilisateur a le r√¥le "ROLE_PATIENT", envoyer le formulaire
document.querySelector("form").submit();
} else { // Afficher la modale pour demander la connexion
showLoginModal();
}
}

function closeLoginModal() {
document.getElementById("loginModal").classList.add("hidden");
}
// function redirectToLogin() {
//         // Rediriger vers la page de connexion
//         const loginUrl = "{{ path('app_login') }}";
//         window.location.href = loginUrl;
//     }
function redirectToLogin() { // Rediriger vers la page de connexion
window.location.href = "{{ path('app_login') }}";
}
function loginSuccessRedirect() { // Recharger la page actuelle
window.location.reload();
}
function showLoginModal() {
document.getElementById("loginModal").classList.remove("hidden");
}

// script of start //

// S√©lectionnez toutes les √©toiles
const stars = document.querySelectorAll('.star');
// R√©cup√©rez le champ de note du formulaire
const noteField = document.getElementById('form_note');

// Ajoutez un √©couteur d'√©v√©nement √† chaque √©toile
stars.forEach(star => {
star.addEventListener('click', () => { // R√©cup√©rez la valeur de l'√©toile cliqu√©e
const rating = star.dataset.rating;

// Mettez √† jour l'affichage des √©toiles
updateStars(rating);

// Mettez √† jour la valeur du champ de note
noteField.value = rating;

// Enregistrez la valeur de la note ou effectuez toute autre action souhait√©e
saveRating(rating);
});
});

// Fonction pour mettre √† jour l'affichage des √©toiles
function updateStars(rating) {
stars.forEach(star => {
if (star.dataset.rating <= rating) {
star.classList.add('active');
} else {
star.classList.remove('active');
}
});
}
	</script>
{% endblock %}
